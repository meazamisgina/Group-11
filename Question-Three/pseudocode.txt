INPUT:
    - Table details (id, capacity, area)
    - Guest details (name, contact info, VIP status, preferences)
    - Reservation requests (guest info, party size, time, table/area preference, walk-in or online)
    - Cancellations or changes to reservations

PROCESS:
    1. Create hashmap that stores restaurant tables details.
    2. When a reservation request is received:
    3. If there is available tables matching party size, time, and preferences.
    4. If a suitable table is available:
    5. Assign the table to the guest.
    6. Mark the table as reserved for that time slot.
    7. Create a hashmap that holds guest details assigned to the available table.
    8. If there is no available table :
    9 . Add the guest to the waitlist with their preferences.
    10. Create a hasmap that holds guest detail that have waitlist status.
    11. For walk-in guests:
    12. Attempt to make an immediate reservation as above.
    13. When guests arrive:
    14. If table becomes free, seat the guest and update the status.
    15. When a reservation is cancelled:
    16. Free up the table.
    17. Optimize table turnover during peak hours:
    18. Track table usage and expected end times.
    19. Prepare tables promptly for the next reservation or waitlisted guest.
    20. Prioritize VIPs or key guests as needed.

OUTPUT:
    - Confirmation or waitlist notification for reservation requests.
    - Table assignment and seating for guests.
    - Updated reports on reservations, waitlist status, and table availability.

    
